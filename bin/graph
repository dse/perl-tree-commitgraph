#!/usr/bin/perl
use warnings;
use strict;

use List::Util qw(max min);

while (<>) {
    next if m{^\s*\#};          # skip comments;
    next if m{^\s*$};           # skip blank lines
    s{#.*$}{};                  # remove comments from end of line
    if (m{^\s*---\s*$}) {       # end of graph; start over
        initState();
        next;
    }
    my (@commits) = split(' ', $_);
    commit(@commits);
}

my %commitColumn;               # commit id -> column number hash
my @columnStatus;               # column number -> status (2 = new column; 1 = active column)
my $lastColumnCount;            # for determining each graph line's width
my $thisCommitColumn;           # this commit's column
my $firstParentColumn;
my @otherParentColumn;
my $columnCount;
my @commits;
initState();

sub commit {
    @commits = @_;
    my ($commit, $firstParent, @otherParent) = @_;
    $thisCommitColumn = $commitColumn{$commit} //= newColumn();
    $columnStatus[$thisCommitColumn] //= 1;
    $firstParentColumn = defined $firstParent ?
      $commitColumn{$firstParent} //= $commitColumn{$commit} :
      undef;
    $columnStatus[$firstParentColumn] //= 2 if defined $firstParentColumn;
    @otherParentColumn = ();
    foreach my $otherParent (@otherParent) {
        push(@otherParentColumn, $commitColumn{$otherParent} //= newColumn());
        $columnStatus[$commitColumn{$otherParent}] //= 2;
    }
    $columnCount = columnCount();
    printLine();
    printDiagonals();
    do { $_ = 1 if defined $_ && $_ == 2 } foreach @columnStatus;
}

sub initState {
    %commitColumn       = ();
    @columnStatus       = ();
    $lastColumnCount    = undef;
    $thisCommitColumn   = undef;
    $firstParentColumn  = undef;
    @otherParentColumn  = ();
    $columnCount        = undef;
    @commits            = ();
}

sub newColumn {
    for (my $i = 0; $i < scalar @columnStatus; $i += 1) {
        return $i if !defined $columnStatus[$i];
    }
    return scalar @columnStatus;
}

sub columnCount {
    my $count = 0;
    for (my $i = 0; $i < scalar @columnStatus; $i += 1) {
        $count = $i + 1 if defined $columnStatus[$i];
    }
    return $count;
}

sub printLine {
    for (my $i = 0; $i < $columnCount; $i += 1) {
        print('  ') if $i;
        if ($i == $thisCommitColumn) {
            print('*');
        } elsif (!defined $columnStatus[$i]) {
            print(' ');
        } elsif ($columnStatus[$i] == 1) {
            print('|');
        } else {
            print(' ');
        }
    }
    print("  @commits\n");
}

sub printDiagonals {
    if (!defined $firstParentColumn) {
        return;
    }
    my @dest = ($firstParentColumn, @otherParentColumn);

    if (!grep { $_ eq $thisCommitColumn } @dest) {
        $columnStatus[$thisCommitColumn] = undef;
    }

    my @diagonalDest = grep { $_ ne $thisCommitColumn } @dest;
    if (scalar @diagonalDest) {
        my $maxCount = $columnCount;
        $maxCount = max($columnCount, $lastColumnCount) if defined $lastColumnCount;
        my $textColumnCount = $maxCount * 3 - 2;
        my $diagonal1 = ' ' x $textColumnCount;
        my $diagonal2 = ' ' x $textColumnCount;
        my @leftDest  = grep { $_ < $thisCommitColumn } @diagonalDest;
        my @rightDest = grep { $_ > $thisCommitColumn } @diagonalDest;
        if (scalar @leftDest) {
            my $leftmost = min(@leftDest);
            my $c1 = $thisCommitColumn * 3 - 1;
            my $c2 = $leftmost * 3 + 1;
            my $ucount = $c1 - $c2 - 1;
            substr($diagonal1, $c2 + 1, $ucount) = ('_' x $ucount);
            substr($diagonal1, $c1, 1) = '/';
            substr($diagonal2, $_ * 3 + 1, 1) = '/' foreach @leftDest;
        }
        if (scalar @rightDest) {
            my $rightmost = max(@rightDest);
            my $c1 = $thisCommitColumn * 3 + 1;
            my $c2 = $rightmost * 3 - 1;
            my $ucount = $c2 - $c1 - 1;
            substr($diagonal1, $c1, 1) = '\\';
            substr($diagonal1, $c1 + 1, $ucount) = ('_' x $ucount);
            substr($diagonal2, $_ * 3 - 1, 1) = '\\' foreach @rightDest;
        }
        if (grep { $_ eq $thisCommitColumn } @dest) {
            substr($diagonal1, $thisCommitColumn * 3, 1) = '|';
            substr($diagonal2, $thisCommitColumn * 3, 1) = '|';
        }
        for (my $i = 0; $i < scalar @columnStatus; $i += 1) {
            if (defined $columnStatus[$i] && $columnStatus[$i] == 1) {
                substr($diagonal1, $i * 3, 1) = '|';
                substr($diagonal2, $i * 3, 1) = '|';
            }
        }

        print("$diagonal1\n");
        print("$diagonal2\n");
    }
}
